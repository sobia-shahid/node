{"version":3,"sources":["views/pages/profile/ProfileId.js"],"names":["Profile","React","useContext","ProductContext","products","useState","isLoading","setIsLoading","id","UserContext","user","useParams","Allusers","setAllusers","userProducts","setUserProducts","useEffect","axios","get","then","response","data","console","log","setInterval","showPlaces","res","userProfile","filter","item","_id","map","username","image","bio","email","webiste","website","facebook","twitter","instagram","google","linkid","name","iduser","Loading","WholePage","Fragment","Row","Col","sm","ProfileHeader","userName","className","AboutCard","UserProductListFoRnonLogin","styled","div","media","phone","tablet","desktop","large"],"mappings":"k0CAsBe,SAASA,IACDC,IAAMC,WAAWC,KAA9BC,SADyB,IAAD,EAEEC,oBAAS,GAFX,mBAEzBC,EAFyB,KAEdC,EAFc,KAIxBC,GADSP,IAAMC,WAAWO,KAA1BC,KACOC,cAAPH,IAJwB,EAKAH,mBAAS,IALT,mBAKzBO,EALyB,KAKfC,EALe,OAMQR,mBAAS,IANjB,mBAMzBS,EANyB,KAMXC,EANW,KAQhCd,IAAMe,WAAU,WAUd,OATAT,GAAa,GACbU,IAAMC,IAAI,eAAeC,MAAK,SAACC,GAC7BP,EAAYO,EAASC,MACrBC,QAAQC,IAAIH,EAASC,MACrBG,aAAY,WACVjB,GAAa,KACZ,QAGE,eACN,IAEHN,IAAMe,WAAU,WACdS,MACC,IAEH,IAAMA,EAAa,WACjBlB,GAAa,GACbU,IAAMC,IAAN,2BAA8BV,IAAMW,MAAK,SAACO,GACxCJ,QAAQC,IAAIG,EAAIL,MAChBN,EAAgBW,EAAIL,MACpBd,GAAa,OAGXoB,EAAcf,EAASgB,QAAO,SAACC,GAAD,OAAUA,EAAKC,MAAQtB,KAC3Dc,QAAQC,IAAII,GACKA,EAAYI,KAAI,SAACF,GAChC,OAAOA,EAAKG,YADd,IAGMC,EAAQN,EAAYI,KAAI,SAACF,GAC7B,OAAOA,EAAKI,SAGRC,EAAMP,EAAYI,KAAI,SAACF,GAC3B,OAAOA,EAAKK,OAGRC,EAAQR,EAAYI,KAAI,SAACF,GAC7B,OAAOA,EAAKM,SAERC,EAAUT,EAAYI,KAAI,SAACF,GAC/B,OAAOA,EAAKQ,WAGRC,EAAWX,EAAYI,KAAI,SAACF,GAChC,OAAOA,EAAKS,YAGRC,EAAUZ,EAAYI,KAAI,SAACF,GAC/B,OAAOA,EAAKU,WAGRC,EAAYb,EAAYI,KAAI,SAACF,GACjC,OAAOA,EAAKW,aAGRC,EAASd,EAAYI,KAAI,SAACF,GAC9B,OAAOA,EAAKY,UAGRC,EAASf,EAAYI,KAAI,SAACF,GAC9B,OAAOA,EAAKa,UAGRC,EAAOhB,EAAYI,KAAI,SAACF,GAC5B,OAAOA,EAAKc,QAGRX,EAAWL,EAAYI,KAAI,SAACF,GAChC,OAAOA,EAAKG,YAGRY,EAASjB,EAAYI,KAAI,SAACF,GAC9B,OAAOA,EAAKC,OAGd,OAAIxB,EACK,kBAACuC,EAAA,EAAD,MAGP,kBAACC,EAAD,KACE,6BACE,kBAAC,IAAMC,SAAP,KACE,yBAAKvC,GAAG,gBACN,kBAACwC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MAEN,kBAACC,EAAA,EAAD,CAAelB,MAAOA,EAAOmB,SAAUpB,MAG3C,yBAAKqB,UAAU,aAMb,yBAAK7C,GAAG,gBACN,kBAAC8C,EAAA,EAAD,CACEpB,IAAKA,EACLC,MAAOA,EACPQ,KAAMA,EACNX,SAAUA,EACVI,QAASA,EACTE,SAAUA,EACVC,QAASA,EACTC,UAAWA,EACXC,OAAQA,EACRC,OAAQA,EACRE,OAAQA,KAIZ,yBAAKS,UAAU,QACb,kBAACE,EAAA,EAAD,CAA4BnD,SAAUU,UAUtD,IAAMgC,EAAYU,IAAOC,IAAV,IAOXC,IAAMC,MAPK,KAgBXD,IAAME,OAhBK,KA0BXF,IAAMG,QA1BK,KAqCXH,IAAMI,MArCK","file":"static/js/22.ba98bcd8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Row, Col, Button, Spinner } from \"reactstrap\";\nimport BreadCrumbUsers from \"../../../components/@vuexy/breadCrumbs/BreadCrumbUsers\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport AboutCard from \"./AboutCard\";\nimport SuggestedPages from \"./SuggestedPages\";\nimport TwitterFeed from \"./TwitterFeeds\";\nimport Posts from \"./Posts\";\nimport LatestPhotos from \"./LatestPhotos\";\nimport Suggestions from \"./Suggestions\";\nimport Polls from \"./Polls\";\n\nimport \"../../../assets/scss/pages/users-profile.scss\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { setColor, media, setRem } from \"../../../360/styled\";\nimport FramForNonSignUser from \"../../../360/Pages/FramForNonSignUser\";\nimport Loading from \"../../../360/Pages/Loading\";\nimport { ProductContext } from \"../../../360/context/products\";\nimport { UserContext } from \"../../../360/context/user\";\nimport UserProductListFoRnonLogin from \"../../../360/Components/Products/UserProductListFoRnonLogin\";\nexport default function Profile() {\n  const { products } = React.useContext(ProductContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const { user } = React.useContext(UserContext);\n  const { id } = useParams();\n  const [Allusers, setAllusers] = useState([]);\n  const [userProducts, setUserProducts] = useState([]);\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    axios.get(\"/api/users/\").then((response) => {\n      setAllusers(response.data);\n      console.log(response.data);\n      setInterval(() => {\n        setIsLoading(false);\n      }, 500);\n    });\n\n    return () => {};\n  }, []);\n\n  React.useEffect(() => {\n    showPlaces();\n  }, []);\n\n  const showPlaces = () => {\n    setIsLoading(true);\n    axios.get(`/api/places/user/${id}`).then((res) => {\n      console.log(res.data);\n      setUserProducts(res.data);\n      setIsLoading(false);\n    });\n  };\n  const userProfile = Allusers.filter((item) => item._id === id);\n  console.log(userProfile);\n  const userName = userProfile.map((item) => {\n    return item.username;\n  });\n  const image = userProfile.map((item) => {\n    return item.image;\n  });\n\n  const bio = userProfile.map((item) => {\n    return item.bio;\n  });\n\n  const email = userProfile.map((item) => {\n    return item.email;\n  });\n  const webiste = userProfile.map((item) => {\n    return item.website;\n  });\n\n  const facebook = userProfile.map((item) => {\n    return item.facebook;\n  });\n\n  const twitter = userProfile.map((item) => {\n    return item.twitter;\n  });\n\n  const instagram = userProfile.map((item) => {\n    return item.instagram;\n  });\n\n  const google = userProfile.map((item) => {\n    return item.google;\n  });\n\n  const linkid = userProfile.map((item) => {\n    return item.linkid;\n  });\n\n  const name = userProfile.map((item) => {\n    return item.name;\n  });\n\n  const username = userProfile.map((item) => {\n    return item.username;\n  });\n\n  const iduser = userProfile.map((item) => {\n    return item._id;\n  });\n \n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <WholePage>\n      <div>\n        <React.Fragment>\n          <div id=\"user-profile\">\n            <Row>\n              <Col sm=\"12\">\n                \n                <ProfileHeader image={image} userName={username} />\n              </Col>\n            </Row>\n            <div className=\"wholePage\">\n              {/* <BreadCrumbUsers\n                breadCrumbTitle=\"Profile\"\n                breadCrumbParent=\"All Users\"\n                breadCrumbActive=\"Profile\"\n              /> */}\n              <div id=\"profile-info\">\n                <AboutCard\n                  bio={bio}\n                  email={email}\n                  name={name}\n                  username={username}\n                  webiste={webiste}\n                  facebook={facebook}\n                  twitter={twitter}\n                  instagram={instagram}\n                  google={google}\n                  linkid={linkid}\n                  iduser={iduser}\n\n                />\n              </div>\n              <div className=\"list\">\n                <UserProductListFoRnonLogin products={userProducts} />\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      </div>\n    </WholePage>\n  );\n}\n\nconst WholePage = styled.div`\n  .wholePage {\n    padding: 0rem 4rem;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    gap: 1.5rem;\n  }\n  ${media.phone`\n  .wholePage {\n  \n    grid-template-columns: auto  ;\n    /* margin:3rem; */\n  }\n  \n  `}\n\n  ${media.tablet`\n  .wholePage {\n\n    grid-template-columns: auto  ;\n    /* margin:3rem; */\n  }\n\n \n  `}\n  \n  ${media.desktop`\n  .wholePage {\n    \n    grid-template-columns: 1fr 3fr;\n    /* margin:3rem 3rem; */\n   \n  }\n  \n\n  `}\n\n  ${media.large`\n\n  .wholePage {\n\n    grid-template-columns: 1fr 3fr;\n    /* margin:0rem 3rem; */\n    \n  }\n\n\n  \n  `}\n`;\n"],"sourceRoot":""}