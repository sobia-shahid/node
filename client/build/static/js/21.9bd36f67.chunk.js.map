{"version":3,"sources":["views/pages/profile/Profile.js"],"names":["Profile","useState","setIsLoading","id","React","useContext","UserContext","user","useParams","Allusers","setAllusers","userProducts","setUserProducts","useEffect","axios","get","then","response","data","console","log","showPlaces","res","userProfile","filter","item","_id","image","map","username","bio","email","webiste","website","facebook","twitter","instagram","google","linkid","name","iduser","WholePage","Fragment","sm","userName","className","products","styled","div","media","phone","tablet","desktop","large"],"mappings":"kxCAkBe,SAASA,IAAW,IAAD,EACEC,oBAAS,GADX,mBACdC,GADc,WAGxBC,GADSC,IAAMC,WAAWC,KAA1BC,KACOC,cAAPL,IAHwB,EAIAF,mBAAS,IAJT,mBAIzBQ,EAJyB,KAIfC,EAJe,OAKQT,mBAAS,IALjB,mBAKzBU,EALyB,KAKXC,EALW,KAMhCR,IAAMS,WAAU,WAMd,OALAC,IAAMC,IAAI,eAAeC,MAAK,SAACC,GAC7BP,EAAYO,EAASC,MACrBC,QAAQC,IAAIH,EAASC,SAGhB,eACN,IACHd,IAAMS,WAAU,WACdQ,MACC,IACH,IAAMA,EAAa,WACjBnB,GAAa,GACbY,IAAMC,IAAN,2BAA8BZ,IAAMa,MAAK,SAACM,GACxCH,QAAQC,IAAIE,EAAIJ,MAChBN,EAAgBU,EAAIJ,MACpBhB,GAAa,OAGXqB,EAAcd,EAASe,QAAO,SAACC,GAAD,OAAUA,EAAKC,MAAQvB,KAKrDwB,GAHWJ,EAAYK,KAAI,SAACH,GAChC,OAAOA,EAAKI,YAEAN,EAAYK,KAAI,SAACH,GAC7B,OAAOA,EAAKE,UAGRG,EAAMP,EAAYK,KAAI,SAACH,GAC3B,OAAOA,EAAKK,OAGRC,EAAQR,EAAYK,KAAI,SAACH,GAC7B,OAAOA,EAAKM,SAERC,EAAUT,EAAYK,KAAI,SAACH,GAC/B,OAAOA,EAAKQ,WAGRC,EAAWX,EAAYK,KAAI,SAACH,GAChC,OAAOA,EAAKS,YAGRC,EAAUZ,EAAYK,KAAI,SAACH,GAC/B,OAAOA,EAAKU,WAGRC,EAAYb,EAAYK,KAAI,SAACH,GACjC,OAAOA,EAAKW,aAGRC,EAASd,EAAYK,KAAI,SAACH,GAC9B,OAAOA,EAAKY,UAGRC,EAASf,EAAYK,KAAI,SAACH,GAC9B,OAAOA,EAAKa,UAGRC,EAAOhB,EAAYK,KAAI,SAACH,GAC5B,OAAOA,EAAKc,QAGRV,EAAWN,EAAYK,KAAI,SAACH,GAChC,OAAOA,EAAKI,YAGRW,EAASjB,EAAYK,KAAI,SAACH,GAC9B,OAAOA,EAAKC,OAGdP,QAAQC,IAAImB,GAUZ,OACE,kBAACE,EAAD,KACA,6BACE,kBAAC,IAAMC,SAAP,KACE,yBAAKvC,GAAG,gBACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKwC,GAAG,MAEN,kBAAC,IAAD,CAAehB,MAAOA,EAAOiB,SAAUf,MAG3C,yBAAKgB,UAAU,aAMb,yBAAK1C,GAAG,gBACN,kBAAC,IAAD,CACE2B,IAAKA,EACLC,MAAOA,EACPQ,KAAMA,EACNV,SAAUA,EACVG,QAASA,EACTE,SAAUA,EACVC,QAASA,EACTC,UAAWA,EACXC,OAAQA,EACRC,OAAQA,EACRE,OAAQA,KAIZ,yBAAKK,UAAU,QACb,kBAAC,IAAD,CAA4BC,SAAUnC,UAUpD,IAAM8B,EAAYM,IAAOC,IAAV,IAOXC,IAAMC,MAPK,KAgBXD,IAAME,OAhBK,KA0BXF,IAAMG,QA1BK,KAqCXH,IAAMI,MArCK","file":"static/js/21.9bd36f67.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Row, Col, Button, Spinner } from \"reactstrap\";\nimport BreadCrumbUsers from \"../../../components/@vuexy/breadCrumbs/BreadCrumbUsers\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport AboutCard from \"./AboutCard\";\nimport SuggestedPages from \"./SuggestedPages\";\nimport TwitterFeed from \"./TwitterFeeds\";\nimport Posts from \"./Posts\";\nimport LatestPhotos from \"./LatestPhotos\";\nimport Suggestions from \"./Suggestions\";\nimport Polls from \"./Polls\";\nimport { UserContext } from \"../../../360/context/user\";\nimport \"../../../assets/scss/pages/users-profile.scss\";\nimport UserProductListFoRnonLogin from \"../../../360/Components/Products/UserProductListFoRnonLogin\";\nimport styled from \"styled-components\";\nimport { setColor, media, setRem } from \"../../../360/styled\";\nimport axios from \"axios\";\nexport default function Profile() {\n  const [isLoading, setIsLoading] = useState(false);\n  const { user } = React.useContext(UserContext);\n  const { id } = useParams();\n  const [Allusers, setAllusers] = useState([]);\n  const [userProducts, setUserProducts] = useState([]);\n  React.useEffect(() => {\n    axios.get(\"/api/users/\").then((response) => {\n      setAllusers(response.data);\n      console.log(response.data);\n    });\n\n    return () => {};\n  }, []);\n  React.useEffect(() => {\n    showPlaces();\n  }, []);\n  const showPlaces = () => {\n    setIsLoading(true);\n    axios.get(`/api/places/user/${id}`).then((res) => {\n      console.log(res.data);\n      setUserProducts(res.data);\n      setIsLoading(false);\n    });\n  };\n  const userProfile = Allusers.filter((item) => item._id === id);\n\n  const userName = userProfile.map((item) => {\n    return item.username;\n  });\n  const image = userProfile.map((item) => {\n    return item.image;\n  });\n\n  const bio = userProfile.map((item) => {\n    return item.bio;\n  });\n\n  const email = userProfile.map((item) => {\n    return item.email;\n  });\n  const webiste = userProfile.map((item) => {\n    return item.website;\n  });\n\n  const facebook = userProfile.map((item) => {\n    return item.facebook;\n  });\n\n  const twitter = userProfile.map((item) => {\n    return item.twitter;\n  });\n\n  const instagram = userProfile.map((item) => {\n    return item.instagram;\n  });\n\n  const google = userProfile.map((item) => {\n    return item.google;\n  });\n\n  const linkid = userProfile.map((item) => {\n    return item.linkid;\n  });\n\n  const name = userProfile.map((item) => {\n    return item.name;\n  });\n\n  const username = userProfile.map((item) => {\n    return item.username;\n  });\n\n  const iduser = userProfile.map((item) => {\n    return item._id;\n  });\n\n  console.log(name)\n  const toggleLoading = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      this.setState({\n        isLoading: false,\n      });\n    }, 2000);\n  };\n\n  return (\n    <WholePage>\n    <div>\n      <React.Fragment>\n        <div id=\"user-profile\">\n          <Row>\n            <Col sm=\"12\">\n              \n              <ProfileHeader image={image} userName={username} />\n            </Col>\n          </Row>\n          <div className=\"wholePage\">\n            {/* <BreadCrumbUsers\n              breadCrumbTitle=\"Profile\"\n              breadCrumbParent=\"All Users\"\n              breadCrumbActive=\"Profile\"\n            /> */}\n            <div id=\"profile-info\">\n              <AboutCard\n                bio={bio}\n                email={email}\n                name={name}\n                username={username}\n                webiste={webiste}\n                facebook={facebook}\n                twitter={twitter}\n                instagram={instagram}\n                google={google}\n                linkid={linkid}\n                iduser={iduser}\n\n              />\n            </div>\n            <div className=\"list\">\n              <UserProductListFoRnonLogin products={userProducts} />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    </div>\n  </WholePage>\n  );\n}\n\nconst WholePage = styled.div`\n  .wholePage {\n    padding: 0rem 0rem;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    gap: 1.5rem;\n  }\n  ${media.phone`\n  .wholePage {\n  \n    grid-template-columns: auto  ;\n    /* margin:3rem; */\n  }\n  \n  `}\n\n  ${media.tablet`\n  .wholePage {\n\n    grid-template-columns: auto  ;\n    /* margin:3rem; */\n  }\n\n \n  `}\n  \n  ${media.desktop`\n  .wholePage {\n    \n    grid-template-columns: 1fr 3fr;\n    /* margin:3rem 3rem; */\n   \n  }\n  \n\n  `}\n\n  ${media.large`\n\n  .wholePage {\n\n    grid-template-columns: 1fr 3fr;\n    /* margin:0rem 3rem; */\n    \n  }\n\n\n  \n  `}\n`;\n\n"],"sourceRoot":""}